netcdf SPR_I20TRCLM45CN.clm2.r.0201-01-01-00000 {
dimensions:
	gridcell = 2 ;
	landunit = 2 ;
	column = 2 ;
	pft = 34 ;
	levgrnd = 15 ;
	levurb = 5 ;
	levlak = 10 ;
	levsno = 5 ;
	levsno1 = 6 ;
	levtot = 20 ;
	numrad = 2 ;
	levcan = 1 ;
	string_length = 64 ;
	ntapes = 2 ;
	max_chars = 128 ;
variables:
	int timemgr_rst_nstep_rad_prev ;
		timemgr_rst_nstep_rad_prev:long_name = "previous_radiation_nstep" ;
		timemgr_rst_nstep_rad_prev:units = "unitless positive integer" ;
		timemgr_rst_nstep_rad_prev:_FillValue = -999999999 ;
	int timemgr_rst_type ;
		timemgr_rst_type:long_name = "calendar type" ;
		timemgr_rst_type:flag_values = 1, 2 ;
		timemgr_rst_type:flag_meanings = "NO_LEAP_C GREGORIAN" ;
		timemgr_rst_type:units = "unitless" ;
		timemgr_rst_type:_FillValue = -999999999 ;
	int timemgr_rst_step_sec ;
		timemgr_rst_step_sec:long_name = "seconds component of timestep size" ;
		timemgr_rst_step_sec:units = "sec" ;
		timemgr_rst_step_sec:_FillValue = -999999999 ;
		timemgr_rst_step_sec:valid_range = 0, 86400 ;
	int timemgr_rst_start_ymd ;
		timemgr_rst_start_ymd:long_name = "start date" ;
		timemgr_rst_start_ymd:units = "YYYYMMDD" ;
		timemgr_rst_start_ymd:_FillValue = -999999999 ;
	int timemgr_rst_start_tod ;
		timemgr_rst_start_tod:long_name = "start time of day" ;
		timemgr_rst_start_tod:units = "sec" ;
		timemgr_rst_start_tod:_FillValue = -999999999 ;
		timemgr_rst_start_tod:valid_range = 0, 86400 ;
	int timemgr_rst_ref_ymd ;
		timemgr_rst_ref_ymd:long_name = "reference date" ;
		timemgr_rst_ref_ymd:units = "YYYYMMDD" ;
		timemgr_rst_ref_ymd:_FillValue = -999999999 ;
	int timemgr_rst_ref_tod ;
		timemgr_rst_ref_tod:long_name = "reference time of day" ;
		timemgr_rst_ref_tod:units = "sec" ;
		timemgr_rst_ref_tod:_FillValue = -999999999 ;
		timemgr_rst_ref_tod:valid_range = 0, 86400 ;
	int timemgr_rst_curr_ymd ;
		timemgr_rst_curr_ymd:long_name = "current date" ;
		timemgr_rst_curr_ymd:units = "YYYYMMDD" ;
		timemgr_rst_curr_ymd:_FillValue = -999999999 ;
	int timemgr_rst_curr_tod ;
		timemgr_rst_curr_tod:long_name = "current time of day" ;
		timemgr_rst_curr_tod:units = "sec" ;
		timemgr_rst_curr_tod:_FillValue = -999999999 ;
		timemgr_rst_curr_tod:valid_range = 0, 86400 ;
	int mcdate ;
		mcdate:long_name = "current date as 8 digit integer (YYYYMMDD)" ;
	int mcsec ;
		mcsec:long_name = "current seconds of current date" ;
		mcsec:units = "s" ;
	double grid1d_lon(gridcell) ;
		grid1d_lon:long_name = "gridcell longitude" ;
		grid1d_lon:units = "degrees_east" ;
	double grid1d_lat(gridcell) ;
		grid1d_lat:long_name = "gridcell latitude" ;
		grid1d_lat:units = "degrees_north" ;
	int grid1d_ixy(gridcell) ;
		grid1d_ixy:long_name = "2d longitude index of corresponding gridcell" ;
	int grid1d_jxy(gridcell) ;
		grid1d_jxy:long_name = "2d latitude index of corresponding gridcell" ;
	double land1d_lon(landunit) ;
		land1d_lon:long_name = "landunit longitude" ;
		land1d_lon:units = "degrees_east" ;
	double land1d_lat(landunit) ;
		land1d_lat:long_name = "landunit latitude" ;
		land1d_lat:units = "degrees_north" ;
	int land1d_ixy(landunit) ;
		land1d_ixy:long_name = "2d longitude index of corresponding landunit" ;
	int land1d_jxy(landunit) ;
		land1d_jxy:long_name = "2d latitude index of corresponding landunit" ;
	double land1d_wtxy(landunit) ;
		land1d_wtxy:long_name = "landunit weight relative to corresponding gridcell" ;
	int land1d_ityplun(landunit) ;
		land1d_ityplun:long_name = "landunit type (vegetated,urban,lake,wetland or glacier)" ;
	double cols1d_lon(column) ;
		cols1d_lon:long_name = "column longitude" ;
		cols1d_lon:units = "degrees_east" ;
	double cols1d_lat(column) ;
		cols1d_lat:long_name = "column latitude" ;
		cols1d_lat:units = "degrees_north" ;
	int cols1d_ixy(column) ;
		cols1d_ixy:long_name = "2d longitude index of corresponding column" ;
	int cols1d_jxy(column) ;
		cols1d_jxy:long_name = "2d latitude index of corresponding column" ;
	double cols1d_wtxy(column) ;
		cols1d_wtxy:long_name = "column weight relative to corresponding gridcell" ;
	double cols1d_wtlnd(column) ;
		cols1d_wtlnd:long_name = "column weight relative to corresponding landunit" ;
	int cols1d_ityplun(column) ;
		cols1d_ityplun:long_name = "column landunit type (vegetated,urban,lake,wetland or glacier)" ;
	int cols1d_ityp(column) ;
		cols1d_ityp:long_name = "column type (61-roof,62-sunwall,63-shadewall,64-impervious road,65-pervious road,1-all other columns)" ;
	double pfts1d_lon(pft) ;
		pfts1d_lon:long_name = "pft longitude" ;
		pfts1d_lon:units = "degrees_east" ;
	double pfts1d_lat(pft) ;
		pfts1d_lat:long_name = "pft latitude" ;
		pfts1d_lat:units = "degrees_north" ;
	int pfts1d_ixy(pft) ;
		pfts1d_ixy:long_name = "2d longitude index of corresponding pft" ;
	int pfts1d_jxy(pft) ;
		pfts1d_jxy:long_name = "2d latitude index of corresponding pft" ;
	int pfts1d_ci(pft) ;
		pfts1d_ci:long_name = "1d column index of corresponding pft" ;
	double pfts1d_wtxy(pft) ;
		pfts1d_wtxy:long_name = "pft weight relative to corresponding gridcell" ;
	double pfts1d_wtlnd(pft) ;
		pfts1d_wtlnd:long_name = "pft weight relative to corresponding landunit" ;
	double pfts1d_wtcol(pft) ;
		pfts1d_wtcol:long_name = "pft weight relative to corresponding column" ;
	int pfts1d_itypveg(pft) ;
		pfts1d_itypveg:long_name = "pft vegetation type" ;
	int pfts1d_ityplun(pft) ;
		pfts1d_ityplun:long_name = "pft landunit type (vegetated,urban,lake,wetland or glacier)" ;
	double PFT_WTGCELL(pft) ;
		PFT_WTGCELL:long_name = "pft weight relative to corresponding gridcell" ;
		PFT_WTGCELL:units = "" ;
	double PFT_WTLUNIT(pft) ;
		PFT_WTLUNIT:long_name = "pft weight relative to corresponding landunit" ;
		PFT_WTLUNIT:units = "" ;
	double PFT_WTCOL(pft) ;
		PFT_WTCOL:long_name = "pft weight relative to corresponding column" ;
		PFT_WTCOL:units = "" ;
	double EFLX_LWRAD_OUT(pft) ;
		EFLX_LWRAD_OUT:long_name = "emitted infrared (longwave) radiation" ;
		EFLX_LWRAD_OUT:units = "watt/m^2" ;
	int SNLSNO(column) ;
		SNLSNO:long_name = "number of snow layers" ;
		SNLSNO:units = "unitless" ;
	double SNOW_DEPTH(column) ;
		SNOW_DEPTH:long_name = "snow depth" ;
		SNOW_DEPTH:units = "m" ;
	double INT_SNOW(column) ;
		INT_SNOW:long_name = "accumulated snow" ;
		INT_SNOW:units = "mm" ;
	double WA(column) ;
		WA:long_name = "water in the unconfined aquifer" ;
		WA:units = "mm" ;
	double TWS(gridcell) ;
		TWS:long_name = "total water storage" ;
		TWS:units = "mm/s" ;
	double ZWT(column) ;
		ZWT:long_name = "water table depth" ;
		ZWT:units = "m" ;
	double FROST_TABLE(column) ;
		FROST_TABLE:long_name = "frost table depth" ;
		FROST_TABLE:units = "m" ;
	double ZWT_PERCH(column) ;
		ZWT_PERCH:long_name = "perched water table depth" ;
		ZWT_PERCH:units = "m" ;
	double frac_sno_eff(column) ;
		frac_sno_eff:long_name = "fraction of ground covered by snow (0 to 1)" ;
		frac_sno_eff:units = "unitless" ;
	double frac_sno(column) ;
		frac_sno:long_name = "fraction of ground covered by snow (0 to 1)" ;
		frac_sno:units = "unitless" ;
	double DZSNO(column, levsno) ;
		DZSNO:long_name = "snow layer thickness" ;
		DZSNO:units = "m" ;
	double ZSNO(column, levsno) ;
		ZSNO:long_name = "snow layer depth" ;
		ZSNO:units = "m" ;
	double ZISNO(column, levsno) ;
		ZISNO:long_name = "snow interface depth" ;
		ZISNO:units = "m" ;
	double coszen(column) ;
		coszen:long_name = "cosine of solar zenith angle" ;
		coszen:units = "unitless" ;
	double sabs_roof_dir(landunit, numrad) ;
		sabs_roof_dir:long_name = "direct solar absorbed by roof per unit ground area per unit incident flux" ;
		sabs_roof_dir:units = "" ;
	double sabs_roof_dif(landunit, numrad) ;
		sabs_roof_dif:long_name = "diffuse solar absorbed by roof per unit ground area per unit incident flux" ;
		sabs_roof_dif:units = "" ;
	double sabs_sunwall_dir(landunit, numrad) ;
		sabs_sunwall_dir:long_name = "direct solar absorbed by sunwall per unit wall area per unit incident flux" ;
		sabs_sunwall_dir:units = "" ;
	double sabs_sunwall_dif(landunit, numrad) ;
		sabs_sunwall_dif:long_name = "diffuse solar absorbed by sunwall per unit wall area per unit incident flux" ;
		sabs_sunwall_dif:units = "" ;
	double sabs_shadewall_dir(landunit, numrad) ;
		sabs_shadewall_dir:long_name = "direct solar absorbed by shadewall per unit wall area per unit incident flux" ;
		sabs_shadewall_dir:units = "" ;
	double sabs_shadewall_dif(landunit, numrad) ;
		sabs_shadewall_dif:long_name = "diffuse solar absorbed by shadewall per unit wall area per unit incident flux" ;
		sabs_shadewall_dif:units = "" ;
	double sabs_improad_dir(landunit, numrad) ;
		sabs_improad_dir:long_name = "direct solar absorbed by impervious road per unit ground area per unit incident flux" ;
		sabs_improad_dir:units = "" ;
	double sabs_improad_dif(landunit, numrad) ;
		sabs_improad_dif:long_name = "diffuse solar absorbed by impervious road per unit ground area per unit incident flux" ;
		sabs_improad_dif:units = "" ;
	double sabs_perroad_dir(landunit, numrad) ;
		sabs_perroad_dir:long_name = "direct solar absorbed by pervious road per unit ground area per unit incident flux" ;
		sabs_perroad_dir:units = "" ;
	double sabs_perroad_dif(landunit, numrad) ;
		sabs_perroad_dif:long_name = "diffuse solar absorbed by pervious road per unit ground area per unit incident flux" ;
		sabs_perroad_dif:units = "" ;
	double vf_sr(landunit) ;
		vf_sr:long_name = "view factor of sky for road" ;
		vf_sr:units = "" ;
	double vf_wr(landunit) ;
		vf_wr:long_name = "view factor of one wall for road" ;
		vf_wr:units = "" ;
	double vf_sw(landunit) ;
		vf_sw:long_name = "view factor of sky for one wall" ;
		vf_sw:units = "" ;
	double vf_rw(landunit) ;
		vf_rw:long_name = "view factor of road for one wall" ;
		vf_rw:units = "" ;
	double vf_ww(landunit) ;
		vf_ww:long_name = "view factor of opposing wall for one wall" ;
		vf_ww:units = "" ;
	double taf(landunit) ;
		taf:long_name = "urban canopy air temperature" ;
		taf:units = "K" ;
	double qaf(landunit) ;
		qaf:long_name = "urban canopy specific humidity" ;
		qaf:units = "kg/kg" ;
	double albd(pft, numrad) ;
		albd:long_name = "surface albedo (direct) (0 to 1)" ;
		albd:units = "" ;
	double albi(pft, numrad) ;
		albi:long_name = "surface albedo (diffuse) (0 to 1)" ;
		albi:units = "" ;
	double albgrd(column, numrad) ;
		albgrd:long_name = "ground albedo (direct) (0 to 1)" ;
		albgrd:units = "" ;
	double albgri(column, numrad) ;
		albgri:long_name = "ground albedo (indirect) (0 to 1)" ;
		albgri:units = "" ;
	double albsod(column, numrad) ;
		albsod:long_name = "soil albedo (direct) (0 to 1)" ;
		albsod:units = "" ;
	double albsoi(column, numrad) ;
		albsoi:long_name = "soil albedo (indirect) (0 to 1)" ;
		albsoi:units = "" ;
	double H2OSFC(column) ;
		H2OSFC:long_name = "surface water" ;
		H2OSFC:units = "kg/m2" ;
	double FH2OSFC(column) ;
		FH2OSFC:long_name = "fraction of ground covered by h2osfc (0 to 1)" ;
		FH2OSFC:units = "" ;
	double TH2OSFC(column) ;
		TH2OSFC:long_name = "surface water temperature" ;
		TH2OSFC:units = "K" ;
	double H2OSNO(column) ;
		H2OSNO:long_name = "snow water" ;
		H2OSNO:units = "kg/m2" ;
	double H2OSOI_LIQ(column, levtot) ;
		H2OSOI_LIQ:long_name = "liquid water" ;
		H2OSOI_LIQ:units = "kg/m2" ;
	double H2OSOI_ICE(column, levtot) ;
		H2OSOI_ICE:long_name = "ice lens" ;
		H2OSOI_ICE:units = "kg/m2" ;
	double T_GRND(column) ;
		T_GRND:long_name = "ground temperature" ;
		T_GRND:units = "K" ;
	double URBAN_AC(column) ;
		URBAN_AC:long_name = "urban air conditioning flux" ;
		URBAN_AC:units = "watt/m^2" ;
	double URBAN_HEAT(column) ;
		URBAN_HEAT:long_name = "urban heating flux" ;
		URBAN_HEAT:units = "watt/m^2" ;
	double T_REF2M_MIN(pft) ;
		T_REF2M_MIN:long_name = "daily minimum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MIN:units = "K" ;
	double T_REF2M_MAX(pft) ;
		T_REF2M_MAX:long_name = "daily maximum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MAX:units = "K" ;
	double T_REF2M_MIN_INST(pft) ;
		T_REF2M_MIN_INST:long_name = "instantaneous daily min of average 2 m height surface air temp (K)" ;
		T_REF2M_MIN_INST:units = "K" ;
	double T_REF2M_MAX_INST(pft) ;
		T_REF2M_MAX_INST:long_name = "instantaneous daily max of average 2 m height surface air temp (K)" ;
		T_REF2M_MAX_INST:units = "K" ;
	double T_REF2M_U(pft) ;
		T_REF2M_U:long_name = "Urban 2m height surface air temperature" ;
		T_REF2M_U:units = "K" ;
	double T_GRND_U(column) ;
		T_GRND_U:long_name = "urban ground temperature" ;
		T_GRND_U:units = "K" ;
	double T_REF2M_MIN_U(pft) ;
		T_REF2M_MIN_U:long_name = "urban daily minimum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MIN_U:units = "K" ;
	double T_REF2M_MAX_U(pft) ;
		T_REF2M_MAX_U:long_name = "urban daily maximum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MAX_U:units = "K" ;
	double T_REF2M_MIN_INST_U(pft) ;
		T_REF2M_MIN_INST_U:long_name = "urban instantaneous daily min of average 2 m height surface air temp (K)" ;
		T_REF2M_MIN_INST_U:units = "K" ;
	double T_REF2M_MAX_INST_U(pft) ;
		T_REF2M_MAX_INST_U:long_name = "urban instantaneous daily max of average 2 m height surface air temp (K)" ;
		T_REF2M_MAX_INST_U:units = "K" ;
	double T_REF2M_R(pft) ;
		T_REF2M_R:long_name = "Rural 2m height surface air temperature" ;
		T_REF2M_R:units = "K" ;
	double T_GRND_R(column) ;
		T_GRND_R:long_name = "rural ground temperature" ;
		T_GRND_R:units = "K" ;
	double T_REF2M_MIN_R(pft) ;
		T_REF2M_MIN_R:long_name = "rural daily minimum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MIN_R:units = "K" ;
	double T_REF2M_MAX_R(pft) ;
		T_REF2M_MAX_R:long_name = "rural daily maximum of average 2 m height surface air temperature (K)" ;
		T_REF2M_MAX_R:units = "K" ;
	double T_REF2M_MIN_INST_R(pft) ;
		T_REF2M_MIN_INST_R:long_name = "rural instantaneous daily min of average 2 m height surface air temp (K)" ;
		T_REF2M_MIN_INST_R:units = "K" ;
	double T_REF2M_MAX_INST_R(pft) ;
		T_REF2M_MAX_INST_R:long_name = "rural instantaneous daily max of average 2 m height surface air temp (K)" ;
		T_REF2M_MAX_INST_R:units = "K" ;
	double T_SOISNO(column, levtot) ;
		T_SOISNO:long_name = "soil-snow temperature" ;
		T_SOISNO:units = "K" ;
	double T_LAKE(column, levlak) ;
		T_LAKE:long_name = "lake temperature" ;
		T_LAKE:units = "K" ;
	int FRAC_VEG_NOSNO_ALB(pft) ;
		FRAC_VEG_NOSNO_ALB:long_name = "fraction of vegetation not covered by snow (0 or 1)" ;
		FRAC_VEG_NOSNO_ALB:units = "" ;
	double FWET(pft) ;
		FWET:long_name = "fraction of canopy that is wet (0 to 1)" ;
		FWET:units = "" ;
	double tlai(pft) ;
		tlai:long_name = "one-sided leaf area index, no burying by snow" ;
		tlai:units = "" ;
	double tsai(pft) ;
		tsai:long_name = "one-sided stem area index, no burying by snow" ;
		tsai:units = "" ;
	double tlai_z(pft, levcan) ;
		tlai_z:long_name = "tlai increment for canopy layer" ;
		tlai_z:units = "" ;
	double tsai_z(pft, levcan) ;
		tsai_z:long_name = "tsai increment for canopy layer" ;
		tsai_z:units = "" ;
	int ncan(pft) ;
		ncan:long_name = "number of canopy layers" ;
		ncan:units = "" ;
	int nrad(pft) ;
		nrad:long_name = "number of canopy layers, above snow for radiative transfer" ;
		nrad:units = "" ;
	double mlaidiff(pft) ;
		mlaidiff:long_name = "difference between lai month one and month two" ;
		mlaidiff:units = "" ;
	double elai(pft) ;
		elai:long_name = "one-sided leaf area index, with burying by snow" ;
		elai:units = "" ;
	double esai(pft) ;
		esai:long_name = "one-sided stem area index, with burying by snow" ;
		esai:units = "" ;
	double fsun(pft) ;
		fsun:long_name = "sunlit fraction of canopy" ;
		fsun:units = "" ;
	double vcmaxcintsun(pft) ;
		vcmaxcintsun:long_name = "sunlit canopy scaling coefficient" ;
		vcmaxcintsun:units = "" ;
	double vcmaxcintsha(pft) ;
		vcmaxcintsha:long_name = "shaded canopy scaling coefficient" ;
		vcmaxcintsha:units = "" ;
	double htop(pft) ;
		htop:long_name = "canopy top" ;
		htop:units = "m" ;
	double hbot(pft) ;
		hbot:long_name = "canopy botton" ;
		hbot:units = "m" ;
	double fabd(pft, numrad) ;
		fabd:long_name = "flux absorbed by veg per unit direct flux" ;
		fabd:units = "" ;
	double fabi(pft, numrad) ;
		fabi:long_name = "flux absorbed by veg per unit diffuse flux" ;
		fabi:units = "" ;
	double fabd_sun(pft, numrad) ;
		fabd_sun:long_name = "flux absorbed by sunlit leaf per unit direct flux" ;
		fabd_sun:units = "" ;
	double fabd_sha(pft, numrad) ;
		fabd_sha:long_name = "flux absorbed by shaded leaf per unit direct flux" ;
		fabd_sha:units = "" ;
	double fabi_sun(pft, numrad) ;
		fabi_sun:long_name = "flux absorbed by sunlit leaf per unit diffuse flux" ;
		fabi_sun:units = "" ;
	double fabi_sha(pft, numrad) ;
		fabi_sha:long_name = "flux absorbed by shaded leaf per unit diffuse flux" ;
		fabi_sha:units = "" ;
	double fabd_sun_z(pft, levcan) ;
		fabd_sun_z:long_name = "absorbed sunlit leaf direct PAR (per unit lai+sai) for canopy layer" ;
		fabd_sun_z:units = "" ;
	double fabd_sha_z(pft, levcan) ;
		fabd_sha_z:long_name = "absorbed shaded leaf direct PAR (per unit lai+sai) for canopy layer" ;
		fabd_sha_z:units = "" ;
	double fabi_sun_z(pft, levcan) ;
		fabi_sun_z:long_name = "absorbed sunlit leaf diffuse PAR (per unit lai+sai) for canopy layer" ;
		fabi_sun_z:units = "" ;
	double fabi_sha_z(pft, levcan) ;
		fabi_sha_z:long_name = "absorbed shaded leaf diffuse PAR (per unit lai+sai) for canopy layer" ;
		fabi_sha_z:units = "" ;
	double fsun_z(pft, levcan) ;
		fsun_z:long_name = "sunlit fraction for canopy layer" ;
		fsun_z:units = "" ;
	double ftdd(pft, numrad) ;
		ftdd:long_name = "down direct flux below veg per unit direct flux" ;
		ftdd:units = "" ;
	double ftid(pft, numrad) ;
		ftid:long_name = "down diffuse flux below veg per unit direct flux" ;
		ftid:units = "" ;
	double ftii(pft, numrad) ;
		ftii:long_name = "down diffuse flux below veg per unit diffuse flux" ;
		ftii:units = "" ;
	double T_VEG(pft) ;
		T_VEG:long_name = "vegetation temperature" ;
		T_VEG:units = "K" ;
	double T_REF2M(pft) ;
		T_REF2M:long_name = "2m height surface air temperature" ;
		T_REF2M:units = "K" ;
	double H2OCAN(pft) ;
		H2OCAN:long_name = "canopy water" ;
		H2OCAN:units = "kg/m2" ;
	int n_irrig_steps_left(column) ;
		n_irrig_steps_left:long_name = "number of irrigation time steps left" ;
		n_irrig_steps_left:units = "#" ;
	double irrig_rate(column) ;
		irrig_rate:long_name = "irrigation rate" ;
		irrig_rate:units = "mm/s" ;
	double snw_rds(column, levsno) ;
		snw_rds:long_name = "snow layer effective radius" ;
		snw_rds:units = "um" ;
	double mss_bcpho(column, levsno) ;
		mss_bcpho:long_name = "snow layer hydrophobic black carbon mass" ;
		mss_bcpho:units = "kg m-2" ;
	double mss_bcphi(column, levsno) ;
		mss_bcphi:long_name = "snow layer hydrophilic black carbon mass" ;
		mss_bcphi:units = "kg m-2" ;
	double mss_ocpho(column, levsno) ;
		mss_ocpho:long_name = "snow layer hydrophobic organic carbon mass" ;
		mss_ocpho:units = "kg m-2" ;
	double mss_ocphi(column, levsno) ;
		mss_ocphi:long_name = "snow layer hydrophilic organic carbon mass" ;
		mss_ocphi:units = "kg m-2" ;
	double mss_dst1(column, levsno) ;
		mss_dst1:long_name = "snow layer dust species 1 mass" ;
		mss_dst1:units = "kg m-2" ;
	double mss_dst2(column, levsno) ;
		mss_dst2:long_name = "snow layer dust species 2 mass" ;
		mss_dst2:units = "kg m-2" ;
	double mss_dst3(column, levsno) ;
		mss_dst3:long_name = "snow layer dust species 3 mass" ;
		mss_dst3:units = "kg m-2" ;
	double mss_dst4(column, levsno) ;
		mss_dst4:long_name = "snow layer dust species 4 mass" ;
		mss_dst4:units = "kg m-2" ;
	double flx_absdv(column, levsno1) ;
		flx_absdv:long_name = "snow layer flux absorption factors (direct, VIS)" ;
		flx_absdv:units = "fraction" ;
	double flx_absdn(column, levsno1) ;
		flx_absdn:long_name = "snow layer flux absorption factors (direct, NIR)" ;
		flx_absdn:units = "fraction" ;
	double flx_absiv(column, levsno1) ;
		flx_absiv:long_name = "snow layer flux absorption factors (diffuse, VIS)" ;
		flx_absiv:units = "fraction" ;
	double flx_absin(column, levsno1) ;
		flx_absin:long_name = "snow layer flux absorption factors (diffuse, NIR)" ;
		flx_absin:units = "fraction" ;
	double albsnd_hst(column, numrad) ;
		albsnd_hst:long_name = "snow albedo (direct) (0 to 1)" ;
		albsnd_hst:units = "proportion" ;
	double albsni_hst(column, numrad) ;
		albsni_hst:long_name = "snow albedo (diffuse) (0 to 1)" ;
		albsni_hst:units = "proportion" ;
	double qflx_snofrz_lyr(column, levsno) ;
		qflx_snofrz_lyr:long_name = "snow layer ice freezing rate" ;
		qflx_snofrz_lyr:units = "kg m-2 s-1" ;
	double qflx_snow_melt(column) ;
		qflx_snow_melt:long_name = "net snow melt" ;
		qflx_snow_melt:units = "mm/s" ;
	double qflx_floodg(gridcell) ;
		qflx_floodg:long_name = "flood water flux" ;
		qflx_floodg:units = "mm/s" ;
	double dormant_flag(pft) ;
		dormant_flag:long_name = "dormancy flag" ;
		dormant_flag:units = "unitless" ;
	double days_active(pft) ;
		days_active:long_name = "number of days since last dormancy" ;
		days_active:units = "days" ;
	double onset_flag(pft) ;
		onset_flag:long_name = "flag if critical growing degree-day sum is exceeded" ;
		onset_flag:units = "unitless" ;
	double onset_counter(pft) ;
		onset_counter:long_name = "onset days counter" ;
		onset_counter:units = "sec" ;
	double onset_gddflag(pft) ;
		onset_gddflag:long_name = "onset flag for growing degree day sum" ;
		onset_gddflag:units = "" ;
	double onset_fdd(pft) ;
		onset_fdd:long_name = "onset freezing degree days counter" ;
		onset_fdd:units = "days" ;
	double onset_gdd(pft) ;
		onset_gdd:long_name = "onset growing degree days" ;
		onset_gdd:units = "days" ;
	double onset_swi(pft) ;
		onset_swi:long_name = "onset soil water index" ;
		onset_swi:units = "days" ;
	double offset_flag(pft) ;
		offset_flag:long_name = "offset flag" ;
		offset_flag:units = "unitless" ;
	double offset_counter(pft) ;
		offset_counter:long_name = "offset days counter" ;
		offset_counter:units = "sec" ;
	double offset_fdd(pft) ;
		offset_fdd:long_name = "offset freezing degree days counter" ;
		offset_fdd:units = "days" ;
	double offset_swi(pft) ;
		offset_swi:long_name = "" ;
		offset_swi:units = "" ;
	double lgsf(pft) ;
		lgsf:long_name = "" ;
		lgsf:units = "" ;
	double bglfr(pft) ;
		bglfr:long_name = "" ;
		bglfr:units = "" ;
	double bgtr(pft) ;
		bgtr:long_name = "" ;
		bgtr:units = "" ;
	double dayl(pft) ;
		dayl:long_name = "" ;
		dayl:units = "" ;
	double prev_dayl(pft) ;
		prev_dayl:long_name = "" ;
		prev_dayl:units = "" ;
	double annavg_t2m(pft) ;
		annavg_t2m:long_name = "" ;
		annavg_t2m:units = "" ;
	double tempavg_t2m(pft) ;
		tempavg_t2m:long_name = "" ;
		tempavg_t2m:units = "" ;
	double gpp_pepv(pft) ;
		gpp_pepv:long_name = "" ;
		gpp_pepv:units = "" ;
	double availc(pft) ;
		availc:long_name = "" ;
		availc:units = "" ;
	double xsmrpool_recover(pft) ;
		xsmrpool_recover:long_name = "" ;
		xsmrpool_recover:units = "" ;
	double xsmrpool_c13ratio(pft) ;
		xsmrpool_c13ratio:long_name = "" ;
		xsmrpool_c13ratio:units = "" ;
	double alloc_pnow(pft) ;
		alloc_pnow:long_name = "" ;
		alloc_pnow:units = "" ;
	double c_allometry(pft) ;
		c_allometry:long_name = "" ;
		c_allometry:units = "" ;
	double n_allometry(pft) ;
		n_allometry:long_name = "" ;
		n_allometry:units = "" ;
	double plant_ndemand(pft) ;
		plant_ndemand:long_name = "" ;
		plant_ndemand:units = "" ;
	double tempsum_potential_gpp(pft) ;
		tempsum_potential_gpp:long_name = "" ;
		tempsum_potential_gpp:units = "" ;
	double annsum_potential_gpp(pft) ;
		annsum_potential_gpp:long_name = "" ;
		annsum_potential_gpp:units = "" ;
	double tempmax_retransn(pft) ;
		tempmax_retransn:long_name = "" ;
		tempmax_retransn:units = "" ;
	double annmax_retransn(pft) ;
		annmax_retransn:long_name = "" ;
		annmax_retransn:units = "" ;
	double avail_retransn(pft) ;
		avail_retransn:long_name = "" ;
		avail_retransn:units = "" ;
	double plant_nalloc(pft) ;
		plant_nalloc:long_name = "" ;
		plant_nalloc:units = "" ;
	double plant_calloc(pft) ;
		plant_calloc:long_name = "" ;
		plant_calloc:units = "" ;
	double excess_cflux(pft) ;
		excess_cflux:long_name = "" ;
		excess_cflux:units = "" ;
	double downreg(pft) ;
		downreg:long_name = "" ;
		downreg:units = "" ;
	double prev_leafc_to_litter(pft) ;
		prev_leafc_to_litter:long_name = "" ;
		prev_leafc_to_litter:units = "" ;
	double prev_frootc_to_litter(pft) ;
		prev_frootc_to_litter:long_name = "" ;
		prev_frootc_to_litter:units = "" ;
	double tempsum_npp(pft) ;
		tempsum_npp:long_name = "" ;
		tempsum_npp:units = "" ;
	double annsum_npp(pft) ;
		annsum_npp:long_name = "" ;
		annsum_npp:units = "" ;
	double rc13_canair(pft) ;
		rc13_canair:long_name = "" ;
		rc13_canair:units = "" ;
	double rc13_psnsun(pft) ;
		rc13_psnsun:long_name = "" ;
		rc13_psnsun:units = "" ;
	double rc13_psnsha(pft) ;
		rc13_psnsha:long_name = "" ;
		rc13_psnsha:units = "" ;
	double leafc(pft) ;
		leafc:long_name = "" ;
		leafc:units = "" ;
	double leafc_storage(pft) ;
		leafc_storage:long_name = "" ;
		leafc_storage:units = "" ;
	double leafc_xfer(pft) ;
		leafc_xfer:long_name = "" ;
		leafc_xfer:units = "" ;
	double frootc(pft) ;
		frootc:long_name = "" ;
		frootc:units = "" ;
	double frootc_storage(pft) ;
		frootc_storage:long_name = "" ;
		frootc_storage:units = "" ;
	double frootc_xfer(pft) ;
		frootc_xfer:long_name = "" ;
		frootc_xfer:units = "" ;
	double livestemc(pft) ;
		livestemc:long_name = "" ;
		livestemc:units = "" ;
	double livestemc_storage(pft) ;
		livestemc_storage:long_name = "" ;
		livestemc_storage:units = "" ;
	double livestemc_xfer(pft) ;
		livestemc_xfer:long_name = "" ;
		livestemc_xfer:units = "" ;
	double deadstemc(pft) ;
		deadstemc:long_name = "" ;
		deadstemc:units = "" ;
	double deadstemc_storage(pft) ;
		deadstemc_storage:long_name = "" ;
		deadstemc_storage:units = "" ;
	double deadstemc_xfer(pft) ;
		deadstemc_xfer:long_name = "" ;
		deadstemc_xfer:units = "" ;
	double livecrootc(pft) ;
		livecrootc:long_name = "" ;
		livecrootc:units = "" ;
	double livecrootc_storage(pft) ;
		livecrootc_storage:long_name = "" ;
		livecrootc_storage:units = "" ;
	double livecrootc_xfer(pft) ;
		livecrootc_xfer:long_name = "" ;
		livecrootc_xfer:units = "" ;
	double deadcrootc(pft) ;
		deadcrootc:long_name = "" ;
		deadcrootc:units = "" ;
	double deadcrootc_storage(pft) ;
		deadcrootc_storage:long_name = "" ;
		deadcrootc_storage:units = "" ;
	double deadcrootc_xfer(pft) ;
		deadcrootc_xfer:long_name = "" ;
		deadcrootc_xfer:units = "" ;
	double gresp_storage(pft) ;
		gresp_storage:long_name = "" ;
		gresp_storage:units = "" ;
	double gresp_xfer(pft) ;
		gresp_xfer:long_name = "" ;
		gresp_xfer:units = "" ;
	double cpool(pft) ;
		cpool:long_name = "" ;
		cpool:units = "" ;
	double xsmrpool(pft) ;
		xsmrpool:long_name = "" ;
		xsmrpool:units = "" ;
	double pft_ctrunc(pft) ;
		pft_ctrunc:long_name = "" ;
		pft_ctrunc:units = "" ;
	double totvegc(pft) ;
		totvegc:long_name = "" ;
		totvegc:units = "" ;
	double leafc_13(pft) ;
		leafc_13:long_name = "" ;
		leafc_13:units = "" ;
	double leafc_storage_13(pft) ;
		leafc_storage_13:long_name = "" ;
		leafc_storage_13:units = "" ;
	double leafc_xfer_13(pft) ;
		leafc_xfer_13:long_name = "" ;
		leafc_xfer_13:units = "" ;
	double frootc_13(pft) ;
		frootc_13:long_name = "" ;
		frootc_13:units = "" ;
	double frootc_storage_13(pft) ;
		frootc_storage_13:long_name = "" ;
		frootc_storage_13:units = "" ;
	double frootc_xfer_13(pft) ;
		frootc_xfer_13:long_name = "" ;
		frootc_xfer_13:units = "" ;
	double livestemc_13(pft) ;
		livestemc_13:long_name = "" ;
		livestemc_13:units = "" ;
	double livestemc_storage_13(pft) ;
		livestemc_storage_13:long_name = "" ;
		livestemc_storage_13:units = "" ;
	double livestemc_xfer_13(pft) ;
		livestemc_xfer_13:long_name = "" ;
		livestemc_xfer_13:units = "" ;
	double deadstemc_13(pft) ;
		deadstemc_13:long_name = "" ;
		deadstemc_13:units = "" ;
	double deadstemc_storage_13(pft) ;
		deadstemc_storage_13:long_name = "" ;
		deadstemc_storage_13:units = "" ;
	double deadstemc_xfer_13(pft) ;
		deadstemc_xfer_13:long_name = "" ;
		deadstemc_xfer_13:units = "" ;
	double livecrootc_13(pft) ;
		livecrootc_13:long_name = "" ;
		livecrootc_13:units = "" ;
	double livecrootc_storage_13(pft) ;
		livecrootc_storage_13:long_name = "" ;
		livecrootc_storage_13:units = "" ;
	double livecrootc_xfer_13(pft) ;
		livecrootc_xfer_13:long_name = "" ;
		livecrootc_xfer_13:units = "" ;
	double deadcrootc_13(pft) ;
		deadcrootc_13:long_name = "" ;
		deadcrootc_13:units = "" ;
	double deadcrootc_storage_13(pft) ;
		deadcrootc_storage_13:long_name = "" ;
		deadcrootc_storage_13:units = "" ;
	double deadcrootc_xfer_13(pft) ;
		deadcrootc_xfer_13:long_name = "" ;
		deadcrootc_xfer_13:units = "" ;
	double gresp_storage_13(pft) ;
		gresp_storage_13:long_name = "" ;
		gresp_storage_13:units = "" ;
	double gresp_xfer_13(pft) ;
		gresp_xfer_13:long_name = "" ;
		gresp_xfer_13:units = "" ;
	double cpool_13(pft) ;
		cpool_13:long_name = "" ;
		cpool_13:units = "" ;
	double xsmrpool_13(pft) ;
		xsmrpool_13:long_name = "" ;
		xsmrpool_13:units = "" ;
	double pft_ctrunc_13(pft) ;
		pft_ctrunc_13:long_name = "" ;
		pft_ctrunc_13:units = "" ;
	double totvegc_13(pft) ;
		totvegc_13:long_name = "" ;
		totvegc_13:units = "" ;
	double leafn(pft) ;
		leafn:long_name = "" ;
		leafn:units = "" ;
	double leafn_storage(pft) ;
		leafn_storage:long_name = "" ;
		leafn_storage:units = "" ;
	double leafn_xfer(pft) ;
		leafn_xfer:long_name = "" ;
		leafn_xfer:units = "" ;
	double frootn(pft) ;
		frootn:long_name = "" ;
		frootn:units = "" ;
	double frootn_storage(pft) ;
		frootn_storage:long_name = "" ;
		frootn_storage:units = "" ;
	double frootn_xfer(pft) ;
		frootn_xfer:long_name = "" ;
		frootn_xfer:units = "" ;
	double livestemn(pft) ;
		livestemn:long_name = "" ;
		livestemn:units = "" ;
	double livestemn_storage(pft) ;
		livestemn_storage:long_name = "" ;
		livestemn_storage:units = "" ;
	double livestemn_xfer(pft) ;
		livestemn_xfer:long_name = "" ;
		livestemn_xfer:units = "" ;
	double deadstemn(pft) ;
		deadstemn:long_name = "" ;
		deadstemn:units = "" ;
	double deadstemn_storage(pft) ;
		deadstemn_storage:long_name = "" ;
		deadstemn_storage:units = "" ;
	double deadstemn_xfer(pft) ;
		deadstemn_xfer:long_name = "" ;
		deadstemn_xfer:units = "" ;
	double livecrootn(pft) ;
		livecrootn:long_name = "" ;
		livecrootn:units = "" ;
	double livecrootn_storage(pft) ;
		livecrootn_storage:long_name = "" ;
		livecrootn_storage:units = "" ;
	double livecrootn_xfer(pft) ;
		livecrootn_xfer:long_name = "" ;
		livecrootn_xfer:units = "" ;
	double deadcrootn(pft) ;
		deadcrootn:long_name = "" ;
		deadcrootn:units = "" ;
	double deadcrootn_storage(pft) ;
		deadcrootn_storage:long_name = "" ;
		deadcrootn_storage:units = "" ;
	double deadcrootn_xfer(pft) ;
		deadcrootn_xfer:long_name = "" ;
		deadcrootn_xfer:units = "" ;
	double retransn(pft) ;
		retransn:long_name = "" ;
		retransn:units = "" ;
	double npool(pft) ;
		npool:long_name = "" ;
		npool:units = "" ;
	double pft_ntrunc(pft) ;
		pft_ntrunc:long_name = "" ;
		pft_ntrunc:units = "" ;
	double decl(column) ;
		decl:long_name = "" ;
		decl:units = "" ;
	double fpi_vr(column, levgrnd) ;
		fpi_vr:long_name = "fraction of potential immobilization" ;
		fpi_vr:units = "unitless" ;
	double som_adv_coef_vr(column, levgrnd) ;
		som_adv_coef_vr:long_name = "SOM advective flux" ;
		som_adv_coef_vr:units = "m/s" ;
	double som_diffus_coef_vr(column, levgrnd) ;
		som_diffus_coef_vr:long_name = "SOM diffusivity due to bio/cryo-turbation" ;
		som_diffus_coef_vr:units = "m^2/s" ;
	double fpg(column) ;
		fpg:long_name = "" ;
		fpg:units = "" ;
	double annsum_counter(column) ;
		annsum_counter:long_name = "" ;
		annsum_counter:units = "" ;
	double cannsum_npp(column) ;
		cannsum_npp:long_name = "" ;
		cannsum_npp:units = "" ;
	double col_lag_npp(column) ;
		col_lag_npp:long_name = "" ;
		col_lag_npp:units = "" ;
	double cannavg_t2m(column) ;
		cannavg_t2m:long_name = "" ;
		cannavg_t2m:units = "" ;
	int burndate(pft) ;
		burndate:long_name = "" ;
		burndate:units = "" ;
	double lfc(column) ;
		lfc:long_name = "" ;
		lfc:units = "" ;
	double wf(column) ;
		wf:long_name = "" ;
		wf:units = "" ;
	double btran2(pft) ;
		btran2:long_name = "" ;
		btran2:units = "" ;
	double litr1c_vr(column, levgrnd) ;
		litr1c_vr:long_name = "" ;
		litr1c_vr:units = "" ;
	double litr2c_vr(column, levgrnd) ;
		litr2c_vr:long_name = "" ;
		litr2c_vr:units = "" ;
	double litr3c_vr(column, levgrnd) ;
		litr3c_vr:long_name = "" ;
		litr3c_vr:units = "" ;
	double cwdc_vr(column, levgrnd) ;
		cwdc_vr:long_name = "" ;
		cwdc_vr:units = "" ;
	double soil1c_vr(column, levgrnd) ;
		soil1c_vr:long_name = "" ;
		soil1c_vr:units = "" ;
	double soil2c_vr(column, levgrnd) ;
		soil2c_vr:long_name = "" ;
		soil2c_vr:units = "" ;
	double soil3c_vr(column, levgrnd) ;
		soil3c_vr:long_name = "" ;
		soil3c_vr:units = "" ;
	double soil4c_vr(column, levgrnd) ;
		soil4c_vr:long_name = "" ;
		soil4c_vr:units = "" ;
	double bacteriac_vr(column, levgrnd) ;
		bacteriac_vr:long_name = "" ;
		bacteriac_vr:units = "" ;
	double fungic_vr(column, levgrnd) ;
		fungic_vr:long_name = "" ;
		fungic_vr:units = "" ;
	double domc_vr(column, levgrnd) ;
		domc_vr:long_name = "" ;
		domc_vr:units = "" ;
	double col_ctrunc_vr(column, levgrnd) ;
		col_ctrunc_vr:long_name = "" ;
		col_ctrunc_vr:units = "" ;
	double altmax(column) ;
		altmax:long_name = "" ;
		altmax:units = "" ;
	double altmax_lastyear(column) ;
		altmax_lastyear:long_name = "" ;
		altmax_lastyear:units = "" ;
	int altmax_indx(column) ;
		altmax_indx:long_name = "" ;
		altmax_indx:units = "" ;
	int altmax_lastyear_indx(column) ;
		altmax_lastyear_indx:long_name = "" ;
		altmax_lastyear_indx:units = "" ;
	double seedc(column) ;
		seedc:long_name = "" ;
		seedc:units = "" ;
	double totlitc(column) ;
		totlitc:long_name = "" ;
		totlitc:units = "" ;
	double totcolc(column) ;
		totcolc:long_name = "" ;
		totcolc:units = "" ;
	double prod10c(column) ;
		prod10c:long_name = "" ;
		prod10c:units = "" ;
	double prod100c(column) ;
		prod100c:long_name = "" ;
		prod100c:units = "" ;
	double totsomc(column) ;
		totsomc:long_name = "" ;
		totsomc:units = "" ;
	double litr1c_13_vr(column, levgrnd) ;
		litr1c_13_vr:long_name = "" ;
		litr1c_13_vr:units = "" ;
	double litr2c_13_vr(column, levgrnd) ;
		litr2c_13_vr:long_name = "" ;
		litr2c_13_vr:units = "" ;
	double litr3c_13_vr(column, levgrnd) ;
		litr3c_13_vr:long_name = "" ;
		litr3c_13_vr:units = "" ;
	double cwdc_13_vr(column, levgrnd) ;
		cwdc_13_vr:long_name = "" ;
		cwdc_13_vr:units = "" ;
	double soil1c_13_vr(column, levgrnd) ;
		soil1c_13_vr:long_name = "" ;
		soil1c_13_vr:units = "" ;
	double soil2c_13_vr(column, levgrnd) ;
		soil2c_13_vr:long_name = "" ;
		soil2c_13_vr:units = "" ;
	double soil3c_13_vr(column, levgrnd) ;
		soil3c_13_vr:long_name = "" ;
		soil3c_13_vr:units = "" ;
	double soil4c_13_vr(column, levgrnd) ;
		soil4c_13_vr:long_name = "" ;
		soil4c_13_vr:units = "" ;
	double bacteriac_13_vr(column, levgrnd) ;
		bacteriac_13_vr:long_name = "" ;
		bacteriac_13_vr:units = "" ;
	double fungic_13_vr(column, levgrnd) ;
		fungic_13_vr:long_name = "" ;
		fungic_13_vr:units = "" ;
	double domc_13_vr(column, levgrnd) ;
		domc_13_vr:long_name = "" ;
		domc_13_vr:units = "" ;
	double seedc_13(column) ;
		seedc_13:long_name = "" ;
		seedc_13:units = "" ;
	double col_ctrunc_13_vr_vr(column, levgrnd) ;
		col_ctrunc_13_vr_vr:long_name = "" ;
		col_ctrunc_13_vr_vr:units = "" ;
	double totlitc_13(column) ;
		totlitc_13:long_name = "" ;
		totlitc_13:units = "" ;
	double totcolc_13(column) ;
		totcolc_13:long_name = "" ;
		totcolc_13:units = "" ;
	double prod10c_13(column) ;
		prod10c_13:long_name = "" ;
		prod10c_13:units = "" ;
	double prod100c_13(column) ;
		prod100c_13:long_name = "" ;
		prod100c_13:units = "" ;
	double sminn_vr(column, levgrnd) ;
		sminn_vr:long_name = "" ;
		sminn_vr:units = "" ;
	double litr1n_vr(column, levgrnd) ;
		litr1n_vr:long_name = "" ;
		litr1n_vr:units = "" ;
	double litr2n_vr(column, levgrnd) ;
		litr2n_vr:long_name = "" ;
		litr2n_vr:units = "" ;
	double litr3n_vr(column, levgrnd) ;
		litr3n_vr:long_name = "" ;
		litr3n_vr:units = "" ;
	double cwdn_vr(column, levgrnd) ;
		cwdn_vr:long_name = "" ;
		cwdn_vr:units = "" ;
	double soil1n_vr(column, levgrnd) ;
		soil1n_vr:long_name = "" ;
		soil1n_vr:units = "" ;
	double soil2n_vr(column, levgrnd) ;
		soil2n_vr:long_name = "" ;
		soil2n_vr:units = "" ;
	double soil3n_vr(column, levgrnd) ;
		soil3n_vr:long_name = "" ;
		soil3n_vr:units = "" ;
	double soil4n_vr(column, levgrnd) ;
		soil4n_vr:long_name = "" ;
		soil4n_vr:units = "" ;
	double bacterian_vr(column, levgrnd) ;
		bacterian_vr:long_name = "" ;
		bacterian_vr:units = "" ;
	double fungin_vr(column, levgrnd) ;
		fungin_vr:long_name = "" ;
		fungin_vr:units = "" ;
	double domn_vr(column, levgrnd) ;
		domn_vr:long_name = "" ;
		domn_vr:units = "" ;
	double col_ntrunc_vr(column, levgrnd) ;
		col_ntrunc_vr:long_name = "" ;
		col_ntrunc_vr:units = "" ;
	double totcoln(column) ;
		totcoln:long_name = "" ;
		totcoln:units = "" ;
	double seedn(column) ;
		seedn:long_name = "" ;
		seedn:units = "" ;
	double prod10n(column) ;
		prod10n:long_name = "" ;
		prod10n:units = "" ;
	double prod100n(column) ;
		prod100n:long_name = "" ;
		prod100n:units = "" ;
	int decomp_cascade_state ;
		decomp_cascade_state:long_name = "BGC of the model that wrote this restart file: 1s column: 0 = CLM-CN cascade, 1 = Century cascade; 10s column: 0 = CLM-CN denitrification, 10 = Century denitrification" ;
		decomp_cascade_state:units = "" ;
	int spinup_state ;
		spinup_state:long_name = "Spinup state of the model that wrote this restart file: 0 = normal model mode, 1 = AD spinup" ;
		spinup_state:units = "" ;
	double TREFAV_VALUE(pft) ;
		TREFAV_VALUE:long_name = "average over an hour of 2-m temperature" ;
		TREFAV_VALUE:units = "K" ;
	int TREFAV_PERIOD ;
		TREFAV_PERIOD:long_name = "" ;
		TREFAV_PERIOD:units = "time steps" ;
		TREFAV_PERIOD:_FillValue = 2147483647 ;
		TREFAV_PERIOD:missing_value = 2147483647 ;
	double TREFAV_U_VALUE(pft) ;
		TREFAV_U_VALUE:long_name = "average over an hour of urban 2-m temperature" ;
		TREFAV_U_VALUE:units = "K" ;
	int TREFAV_U_PERIOD ;
		TREFAV_U_PERIOD:long_name = "" ;
		TREFAV_U_PERIOD:units = "time steps" ;
		TREFAV_U_PERIOD:_FillValue = 2147483647 ;
		TREFAV_U_PERIOD:missing_value = 2147483647 ;
	double TREFAV_R_VALUE(pft) ;
		TREFAV_R_VALUE:long_name = "average over an hour of rural 2-m temperature" ;
		TREFAV_R_VALUE:units = "K" ;
	int TREFAV_R_PERIOD ;
		TREFAV_R_PERIOD:long_name = "" ;
		TREFAV_R_PERIOD:units = "time steps" ;
		TREFAV_R_PERIOD:_FillValue = 2147483647 ;
		TREFAV_R_PERIOD:missing_value = 2147483647 ;
	double T_VEG24_VALUE(pft) ;
		T_VEG24_VALUE:long_name = "24hr average of vegetation temperature" ;
		T_VEG24_VALUE:units = "K" ;
	int T_VEG24_PERIOD ;
		T_VEG24_PERIOD:long_name = "" ;
		T_VEG24_PERIOD:units = "time steps" ;
		T_VEG24_PERIOD:_FillValue = 2147483647 ;
		T_VEG24_PERIOD:missing_value = 2147483647 ;
	double T_VEG240_VALUE(pft) ;
		T_VEG240_VALUE:long_name = "240hr average of vegetation temperature" ;
		T_VEG240_VALUE:units = "K" ;
	int T_VEG240_PERIOD ;
		T_VEG240_PERIOD:long_name = "" ;
		T_VEG240_PERIOD:units = "time steps" ;
		T_VEG240_PERIOD:_FillValue = 2147483647 ;
		T_VEG240_PERIOD:missing_value = 2147483647 ;
	double FSD24_VALUE(pft) ;
		FSD24_VALUE:long_name = "24hr average of direct solar radiation" ;
		FSD24_VALUE:units = "W/m2" ;
	int FSD24_PERIOD ;
		FSD24_PERIOD:long_name = "" ;
		FSD24_PERIOD:units = "time steps" ;
		FSD24_PERIOD:_FillValue = 2147483647 ;
		FSD24_PERIOD:missing_value = 2147483647 ;
	double FSD240_VALUE(pft) ;
		FSD240_VALUE:long_name = "240hr average of direct solar radiation" ;
		FSD240_VALUE:units = "W/m2" ;
	int FSD240_PERIOD ;
		FSD240_PERIOD:long_name = "" ;
		FSD240_PERIOD:units = "time steps" ;
		FSD240_PERIOD:_FillValue = 2147483647 ;
		FSD240_PERIOD:missing_value = 2147483647 ;
	double FSI24_VALUE(pft) ;
		FSI24_VALUE:long_name = "24hr average of diffuse solar radiation" ;
		FSI24_VALUE:units = "W/m2" ;
	int FSI24_PERIOD ;
		FSI24_PERIOD:long_name = "" ;
		FSI24_PERIOD:units = "time steps" ;
		FSI24_PERIOD:_FillValue = 2147483647 ;
		FSI24_PERIOD:missing_value = 2147483647 ;
	double FSI240_VALUE(pft) ;
		FSI240_VALUE:long_name = "240hr average of diffuse solar radiation" ;
		FSI240_VALUE:units = "W/m2" ;
	int FSI240_PERIOD ;
		FSI240_PERIOD:long_name = "" ;
		FSI240_PERIOD:units = "time steps" ;
		FSI240_PERIOD:_FillValue = 2147483647 ;
		FSI240_PERIOD:missing_value = 2147483647 ;
	double FSUN24_VALUE(pft) ;
		FSUN24_VALUE:long_name = "24hr average of diffuse solar radiation" ;
		FSUN24_VALUE:units = "fraction" ;
	int FSUN24_PERIOD ;
		FSUN24_PERIOD:long_name = "" ;
		FSUN24_PERIOD:units = "time steps" ;
		FSUN24_PERIOD:_FillValue = 2147483647 ;
		FSUN24_PERIOD:missing_value = 2147483647 ;
	double FSUN240_VALUE(pft) ;
		FSUN240_VALUE:long_name = "240hr average of diffuse solar radiation" ;
		FSUN240_VALUE:units = "fraction" ;
	int FSUN240_PERIOD ;
		FSUN240_PERIOD:long_name = "" ;
		FSUN240_PERIOD:units = "time steps" ;
		FSUN240_PERIOD:_FillValue = 2147483647 ;
		FSUN240_PERIOD:missing_value = 2147483647 ;
	double LAIP_VALUE(pft) ;
		LAIP_VALUE:long_name = "leaf area index average over timestep" ;
		LAIP_VALUE:units = "m2/m2" ;
	int LAIP_PERIOD ;
		LAIP_PERIOD:long_name = "" ;
		LAIP_PERIOD:units = "time steps" ;
		LAIP_PERIOD:_FillValue = 2147483647 ;
		LAIP_PERIOD:missing_value = 2147483647 ;
	double T10_VALUE(pft) ;
		T10_VALUE:long_name = "10-day running mean of 2-m temperature" ;
		T10_VALUE:units = "K" ;
	int T10_PERIOD ;
		T10_PERIOD:long_name = "" ;
		T10_PERIOD:units = "time steps" ;
		T10_PERIOD:_FillValue = 2147483647 ;
		T10_PERIOD:missing_value = 2147483647 ;
	double PREC60_VALUE(pft) ;
		PREC60_VALUE:long_name = "60-day running mean of total precipitation" ;
		PREC60_VALUE:units = "MM H2O/S" ;
	int PREC60_PERIOD ;
		PREC60_PERIOD:long_name = "" ;
		PREC60_PERIOD:units = "time steps" ;
		PREC60_PERIOD:_FillValue = 2147483647 ;
		PREC60_PERIOD:missing_value = 2147483647 ;
	double PREC10_VALUE(pft) ;
		PREC10_VALUE:long_name = "10-day running mean of total precipitation" ;
		PREC10_VALUE:units = "MM H2O/S" ;
	int PREC10_PERIOD ;
		PREC10_PERIOD:long_name = "" ;
		PREC10_PERIOD:units = "time steps" ;
		PREC10_PERIOD:_FillValue = 2147483647 ;
		PREC10_PERIOD:missing_value = 2147483647 ;
	double LAKE_ICEFRAC(column, levlak) ;
		LAKE_ICEFRAC:long_name = "lake layer ice fraction" ;
		LAKE_ICEFRAC:units = "kg/kg" ;
	double SAVEDTKE1(column) ;
		SAVEDTKE1:long_name = "top lake layer eddy conductivity" ;
		SAVEDTKE1:units = "W/(m K)" ;
	double USTLAKE(column) ;
		USTLAKE:long_name = "friction velocity for lakes" ;
		USTLAKE:units = "m/s" ;
	double Z0MG(column) ;
		Z0MG:long_name = "ground momentum roughness length" ;
		Z0MG:units = "m" ;
	char locfnh(ntapes, max_chars) ;
		locfnh:long_name = "History filename" ;
		locfnh:comment = "This variable NOT needed for startup or branch simulations" ;
	char locfnhr(ntapes, max_chars) ;
		locfnhr:long_name = "Restart history filename" ;
		locfnhr:comment = "This variable NOT needed for startup or branch simulations" ;
	double pH(column) ;
		pH:long_name = "pH" ;
		pH:units = "unitless" ;
	double soilpH_unsat(column, levgrnd) ;
		soilpH_unsat:long_name = "soilpH in unsat" ;
		soilpH_unsat:units = "unitless" ;
	double soilpH_sat(column, levgrnd) ;
		soilpH_sat:long_name = "soilpH in saturation fraction" ;
		soilpH_sat:units = "unitless" ;
	double FINUNDATED(column) ;
		FINUNDATED:long_name = "fraction of inundated area" ;
		FINUNDATED:units = "m^2/m^2" ;
	double fsat_pre(column) ;
		fsat_pre:long_name = "previous time step fraction of inundated area" ;
		fsat_pre:units = "m^2/m^2" ;
	double fsat(column) ;
		fsat:long_name = "fraction of inundated area" ;
		fsat:units = "m^2/m^2" ;
	double waterhead_unsat(column) ;
		waterhead_unsat:long_name = "fraction of inundated area" ;
		waterhead_unsat:units = "m^2/m^2" ;
	double hr_vr(column, levgrnd) ;
		hr_vr:long_name = "hetrotrophic respiration fraction" ;
		hr_vr:units = "mol/m^2" ;
	double froot_r(column, levgrnd) ;
		froot_r:long_name = "fine root respiration" ;
		froot_r:units = "mol/s" ;
	double CACES_PROD(column, levgrnd) ;
		CACES_PROD:long_name = "acetate production" ;
		CACES_PROD:units = "mol/m^3" ;
	double CACES_UNSAT_PROD(column, levgrnd) ;
		CACES_UNSAT_PROD:long_name = "acetate production in unsaturated fraction" ;
		CACES_UNSAT_PROD:units = "mol/m^3" ;
	double CACES_SAT_PROD(column, levgrnd) ;
		CACES_SAT_PROD:long_name = "acetate production in saturated fraction" ;
		CACES_SAT_PROD:units = "mol/m^3" ;
	double CACES_PROD_H2(column, levgrnd) ;
		CACES_PROD_H2:long_name = "acetogenesis" ;
		CACES_PROD_H2:units = "mol/m^3" ;
	double CACES_UNSAT_PROD_H2(column, levgrnd) ;
		CACES_UNSAT_PROD_H2:long_name = "acetogenesis in unsaturated fraction" ;
		CACES_UNSAT_PROD_H2:units = "mol/m^3" ;
	double CACES_SAT_PROD_H2(column, levgrnd) ;
		CACES_SAT_PROD_H2:long_name = "acetogenesis in saturated fraction" ;
		CACES_SAT_PROD_H2:units = "mol/m^3" ;
	double CDOCS_PRE(column, levgrnd) ;
		CDOCS_PRE:long_name = "previous time step DOC concentration" ;
		CDOCS_PRE:units = "mol/m^3" ;
	double CDONS_MIN(column, levgrnd) ;
		CDONS_MIN:long_name = "dissolved organic nitrogen minterlization" ;
		CDONS_MIN:units = "mol/m^3" ;
	double CDOCS(column, levgrnd) ;
		CDOCS:long_name = "dissolved organic carbon" ;
		CDOCS:units = "mol/m^3" ;
	double CDOCS_UNSAT(column, levgrnd) ;
		CDOCS_UNSAT:long_name = "dissolved organic carbon in unsaturated fraction" ;
		CDOCS_UNSAT:units = "mol/m^3" ;
	double CDOCS_SAT(column, levgrnd) ;
		CDOCS_SAT:long_name = "dissolved organic carbon in saturated fraction" ;
		CDOCS_SAT:units = "mol/m^3" ;
	double CDONS(column, levgrnd) ;
		CDONS:long_name = "dissolved organic nitrogen" ;
		CDONS:units = "mol/m^3" ;
	double CDONS_UNSAT(column, levgrnd) ;
		CDONS_UNSAT:long_name = "dissolved organic nitrogen in unsaturated fraction" ;
		CDONS_UNSAT:units = "mol/m^3" ;
	double CDONS_SAT(column, levgrnd) ;
		CDONS_SAT:long_name = "dissolved organic nitrogen in saturated fraction" ;
		CDONS_SAT:units = "mol/m^3" ;
	double CMICBIOCS(column, levgrnd) ;
		CMICBIOCS:long_name = "microbial biomass carbon" ;
		CMICBIOCS:units = "molC/m^3" ;
	double CMICBIONS(column, levgrnd) ;
		CMICBIONS:long_name = "microbial biomass nitrogen" ;
		CMICBIONS:units = "molN/m^3" ;
	double CACES(column, levgrnd) ;
		CACES:long_name = "acetic acid" ;
		CACES:units = "mol/m^3" ;
	double CACES_UNSAT(column, levgrnd) ;
		CACES_UNSAT:long_name = "acetic acid in unsaturated fraction" ;
		CACES_UNSAT:units = "mol/m^3" ;
	double CACES_SAT(column, levgrnd) ;
		CACES_SAT:long_name = "acetic acid in saturated fraction" ;
		CACES_SAT:units = "mol/m^3" ;
	double CACEBIOS(column, levgrnd) ;
		CACEBIOS:long_name = "methanogenesis based on acetic acid" ;
		CACEBIOS:units = "mol/m^3" ;
	double CACEBIOS_UNSAT(column, levgrnd) ;
		CACEBIOS_UNSAT:long_name = "methanogenesis based on acetic acid in unsaturated fraction" ;
		CACEBIOS_UNSAT:units = "mol/m^3" ;
	double CACEBIOS_SAT(column, levgrnd) ;
		CACEBIOS_SAT:long_name = "methanogenesis based on acetic acid in saturated fraction soil column" ;
		CACEBIOS_SAT:units = "mol/m^3" ;
	double CCO2BIOS(column, levgrnd) ;
		CCO2BIOS:long_name = "methanogensis based on co2" ;
		CCO2BIOS:units = "mol/m^3" ;
	double CCO2BIOS_UNSAT(column, levgrnd) ;
		CCO2BIOS_UNSAT:long_name = "methanogensis based on co2 in unsaturated fraction" ;
		CCO2BIOS_UNSAT:units = "mol/m^3" ;
	double CCO2BIOS_SAT(column, levgrnd) ;
		CCO2BIOS_SAT:long_name = "methanogensis based on co2 in saturated fraction" ;
		CCO2BIOS_SAT:units = "mol/m^3" ;
	double CAERCH4BIOS(column, levgrnd) ;
		CAERCH4BIOS:long_name = "aerobic oxidationo of ch4" ;
		CAERCH4BIOS:units = "mol/m^3" ;
	double CAERCH4BIOS_UNSAT(column, levgrnd) ;
		CAERCH4BIOS_UNSAT:long_name = "aerobic oxidationo of ch4 in unsaturated fraction" ;
		CAERCH4BIOS_UNSAT:units = "mol/m^3" ;
	double CAERCH4BIOS_SAT(column, levgrnd) ;
		CAERCH4BIOS_SAT:long_name = "aerobic oxidationo of ch4 in saturated fraction" ;
		CAERCH4BIOS_SAT:units = "mol/m^3" ;
	double CANAERCH4BIOS(column, levgrnd) ;
		CANAERCH4BIOS:long_name = "biomass for microbes for anaerobic methane oxidation" ;
		CANAERCH4BIOS:units = "mol/m^3" ;
	double CANAERCH4BIOS_UNSAT(column, levgrnd) ;
		CANAERCH4BIOS_UNSAT:long_name = "biomass for microbes for anaerobic methane oxidation in unsaturated fraction" ;
		CANAERCH4BIOS_UNSAT:units = "mol/m^3" ;
	double CANAERCH4BIOS_SAT(column, levgrnd) ;
		CANAERCH4BIOS_SAT:long_name = "biomass for microbes for anaerobic methane oxidation in saturated fraction" ;
		CANAERCH4BIOS_SAT:units = "mol/m^3" ;
	double CCON_CH4S(column, levgrnd) ;
		CCON_CH4S:long_name = "column ch4 concentration" ;
		CCON_CH4S:units = "mol/m^3" ;
	double CCON_CH4S_UNSAT(column, levgrnd) ;
		CCON_CH4S_UNSAT:long_name = "column ch4 concentration in unsaturated fraction" ;
		CCON_CH4S_UNSAT:units = "mol/m^3" ;
	double CCON_CH4S_SAT(column, levgrnd) ;
		CCON_CH4S_SAT:long_name = "column ch4 concentration in saturated fraction" ;
		CCON_CH4S_SAT:units = "mol/m^3" ;
	double CCON_CO2S(column, levgrnd) ;
		CCON_CO2S:long_name = "column co2 concentration" ;
		CCON_CO2S:units = "mol/m^3" ;
	double CCON_CO2S_UNSAT(column, levgrnd) ;
		CCON_CO2S_UNSAT:long_name = "column co2 concentration in unsaturated fraction" ;
		CCON_CO2S_UNSAT:units = "mol/m^3" ;
	double CCON_CO2S_SAT(column, levgrnd) ;
		CCON_CO2S_SAT:long_name = "column co2 concentration in saturated fraction" ;
		CCON_CO2S_SAT:units = "mol/m^3" ;
	double CCON_H2S(column, levgrnd) ;
		CCON_H2S:long_name = "column h2 concentration" ;
		CCON_H2S:units = "mol/m^3" ;
	double CCON_H2S_UNSAT(column, levgrnd) ;
		CCON_H2S_UNSAT:long_name = "column h2 concentration in unsaturated fraction" ;
		CCON_H2S_UNSAT:units = "mol/m^3" ;
	double CCON_H2S_SAT(column, levgrnd) ;
		CCON_H2S_SAT:long_name = "column h2 concentration in saturated fraction" ;
		CCON_H2S_SAT:units = "mol/m^3" ;
	double CCON_O2S(column, levgrnd) ;
		CCON_O2S:long_name = "column o2 concentration" ;
		CCON_O2S:units = "mol/m^3" ;
	double CCON_O2S_UNSAT(column, levgrnd) ;
		CCON_O2S_UNSAT:long_name = "column o2 concentration in unsaturated fraction" ;
		CCON_O2S_UNSAT:units = "mol/m^3" ;
	double CCON_O2S_SAT(column, levgrnd) ;
		CCON_O2S_SAT:long_name = "column o2 concentration in saturated fraction" ;
		CCON_O2S_SAT:units = "mol/m^3" ;
	double tempavg_agnpp(pft) ;
		tempavg_agnpp:long_name = "Temp. Average AGNPP" ;
		tempavg_agnpp:units = "gC/m^2/s" ;
	double tempavg_bgnpp(pft) ;
		tempavg_bgnpp:long_name = "Temp. Average BGNPP" ;
		tempavg_bgnpp:units = "gC/m^2/s" ;
	double annavg_agnpp(pft) ;
		annavg_agnpp:long_name = "Ann. Average AGNPP" ;
		annavg_agnpp:units = "gC/m^2/s" ;
	double annavg_bgnpp(pft) ;
		annavg_bgnpp:long_name = "Ann. Average BGNPP" ;
		annavg_bgnpp:units = "gC/m^2/s" ;

// global attributes:
		:Conventions = "CF-1.0" ;
		:history = "created on 09/03/20 14:36:43" ;
		:username = "xxu" ;
		:host = "peony" ;
		:version = "" ;
		:source = "Community Land Model CLM4.0" ;
		:revision_id = "$Id: restFileMod.F90 41292 2012-10-26 13:51:45Z erik $" ;
		:case_title = "UNSET" ;
		:case_id = "SPR_I20TRCLM45CN" ;
		:surface_dataset = "/mnt/storage/xxu/models/CLM_Microbe/inputdata/lnd/clm2/surfdata_map/surfdata_2x1pt_US-SPR.nc" ;
		:title = "CLM Restart information, required to continue a simulation" ;
}
